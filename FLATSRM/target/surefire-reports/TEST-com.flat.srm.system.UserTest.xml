<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="4" failures="0" name="com.flat.srm.system.UserTest" time="0.384" errors="1" skipped="0">
  <properties>
    <property name="idea.version" value="2017.2"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\work\software\app\jdk1.8\jre\bin"/>
    <property name="java.vm.version" value="25.121-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="D:\learning\development\gitPro\FLATSRM"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="CN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="D:\learning\development\gitPro\FLATSRM"/>
    <property name="java.runtime.version" value="1.8.0_121-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\work\software\app\jdk1.8\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\jingu\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="D:\app\IntelliJ IDEA 2017.2\plugins\maven\lib\maven3\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="GBK"/>
    <property name="java.library.path" value="C:\work\software\app\jdk1.8\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\work\software\oracle\product\11.2.0\dbhome_2\bin;C:\work\software\app\oracle;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\work\software\app\jdk1.8\bin;C:\work\software\app\jdk1.8\jre\bin;C:\work\development\apache-maven-3.3.3\bin;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\app\Git\cmd;C:\Users\jingu\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="user.home" value="C:\Users\jingu"/>
    <property name="user.timezone" value="Asia/Shanghai"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="jingu"/>
    <property name="java.class.path" value="D:\app\IntelliJ IDEA 2017.2\plugins\maven\lib\maven3\boot\plexus-classworlds-2.5.2.jar;D:\app\IntelliJ IDEA 2017.2\lib\idea_rt.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\work\software\app\jdk1.8\jre"/>
    <property name="sun.java.command" value="org.codehaus.classworlds.Launcher -Didea.version=2017.2 install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="zh"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_121"/>
    <property name="java.ext.dirs" value="C:\work\software\app\jdk1.8\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\work\software\app\jdk1.8\jre\lib\resources.jar;C:\work\software\app\jdk1.8\jre\lib\rt.jar;C:\work\software\app\jdk1.8\jre\lib\sunrsasign.jar;C:\work\software\app\jdk1.8\jre\lib\jsse.jar;C:\work\software\app\jdk1.8\jre\lib\jce.jar;C:\work\software\app\jdk1.8\jre\lib\charsets.jar;C:\work\software\app\jdk1.8\jre\lib\jfr.jar;C:\work\software\app\jdk1.8\jre\classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="D:\app\IntelliJ IDEA 2017.2\plugins\maven\lib\maven3"/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="com.flat.srm.system.UserTest" name="saveUser" time="0.328">
    <error message="
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
### The error may involve com.flat.srm.system.dao.user.IUserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into     cp_user      ( NAME,                MAIL,                PID )      values     ( &apos;text1&apos;,                &apos;70&apos;,                ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
; SQL []; Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;" type="org.springframework.dao.DuplicateKeyException">org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
### The error may involve com.flat.srm.system.dao.user.IUserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into     cp_user      ( NAME,                MAIL,                PID )      values     ( &apos;text1&apos;,                &apos;70&apos;,                ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
; SQL []; Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:74)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:421)
	at com.sun.proxy.$Proxy18.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:254)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:52)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at com.sun.proxy.$Proxy20.save(Unknown Source)
	at com.flat.srm.system.UserTest.saveUser(UserTest.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:85)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:86)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:241)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406)
	at com.mysql.jdbc.Util.getInstance(Util.java:381)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1015)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1936)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2060)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2542)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1734)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:995)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy32.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:45)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:73)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:115)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Invocation.proceed(Invocation.java:49)
	at com.flat.srm.common.core.ExamplePlugin.intercept(ExamplePlugin.java:66)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy30.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:170)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:408)
	... 41 more
</error>
    <system-err>log4j:ERROR Could not find value for key log4j.appender.INFO
log4j:ERROR Could not instantiate appender named &quot;INFO&quot;.
[DEBUG] 2017-08-30 14:07:40,980(0) --&gt; [main] org.springframework.test.context.junit4.SpringJUnit4ClassRunner.&lt;init&gt;(SpringJUnit4ClassRunner.java:129): SpringJUnit4ClassRunner constructor called with [class com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:40,992(12) --&gt; [main] org.springframework.test.context.BootstrapUtils.createCacheAwareContextLoaderDelegate(BootstrapUtils.java:96): Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]  
[DEBUG] 2017-08-30 14:07:40,996(16) --&gt; [main] org.springframework.test.context.BootstrapUtils.createBootstrapContext(BootstrapUtils.java:79): Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]  
[DEBUG] 2017-08-30 14:07:41,024(44) --&gt; [main] org.springframework.test.context.BootstrapUtils.resolveTestContextBootstrapper(BootstrapUtils.java:146): Instantiating TestContextBootstrapper for test class [com.flat.srm.system.UserTest] from class [org.springframework.test.context.support.DefaultTestContextBootstrapper]  
[DEBUG] 2017-08-30 14:07:41,074(94) --&gt; [main] org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateProcessing(AbstractDelegatingSmartContextLoader.java:97): Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6cc4c815 declaringClass = &apos;com.flat.srm.system.UserTest&apos;, classes = &apos;{}&apos;, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, inheritLocations = true, initializers = &apos;{}&apos;, inheritInitializers = true, name = [null], contextLoaderClass = &apos;org.springframework.test.context.ContextLoader&apos;].  
[DEBUG] 2017-08-30 14:07:41,079(99) --&gt; [main] org.springframework.test.context.support.ActiveProfilesUtils.resolveActiveProfiles(ActiveProfilesUtils.java:84): Could not find an &apos;annotation declaring class&apos; for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,086(106) --&gt; [main] org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:130): @TestExecutionListeners is not present for class [com.flat.srm.system.UserTest]: using defaults.  
[INFO ] 2017-08-30 14:07:41,095(115) --&gt; [main] org.springframework.test.context.support.AbstractTestContextBootstrapper.getDefaultTestExecutionListenerClassNames(AbstractTestContextBootstrapper.java:259): Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]  
[INFO ] 2017-08-30 14:07:41,132(152) --&gt; [main] org.springframework.test.context.support.AbstractTestContextBootstrapper.getTestExecutionListeners(AbstractTestContextBootstrapper.java:185): Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6e06451e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@59494225, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@6e1567f1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5cb9f472, org.springframework.test.context.transaction.TransactionalTestExecutionListener@cb644e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@13805618]  
[DEBUG] 2017-08-30 14:07:41,135(155) --&gt; [main] org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71): Retrieved @ProfileValueSourceConfiguration [null] for test class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,136(156) --&gt; [main] org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83): Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,145(165) --&gt; [main] org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71): Retrieved @ProfileValueSourceConfiguration [null] for test class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,146(166) --&gt; [main] org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83): Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,149(169) --&gt; [main] org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestClass(AbstractDirtiesContextTestExecutionListener.java:141): Before test class: context [DefaultTestContext@148080bb testClass = UserTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]]], class annotated with @DirtiesContext [false] with mode [null].  
[DEBUG] 2017-08-30 14:07:41,151(171) --&gt; [main] org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:71): Retrieved @ProfileValueSourceConfiguration [null] for test class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,151(171) --&gt; [main] org.springframework.test.annotation.ProfileValueUtils.retrieveProfileValueSource(ProfileValueUtils.java:83): Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.flat.srm.system.UserTest]  
[DEBUG] 2017-08-30 14:07:41,157(177) --&gt; [main] org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:81): Performing dependency injection for test context [[DefaultTestContext@148080bb testClass = UserTest, testInstance = com.flat.srm.system.UserTest@66480dd7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]]]].  
[DEBUG] 2017-08-30 14:07:41,158(178) --&gt; [main] org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:107): Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]].  
[DEBUG] 2017-08-30 14:07:41,159(179) --&gt; [main] org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:107): Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]]].  
[DEBUG] 2017-08-30 14:07:41,280(300) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [systemProperties] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:41,282(302) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [systemEnvironment] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:41,283(303) --&gt; [main] org.springframework.core.env.AbstractEnvironment.&lt;init&gt;(AbstractEnvironment.java:126): Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]  
[INFO ] 2017-08-30 14:07:41,295(315) --&gt; [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [spring/applicationContext.xml]  
[DEBUG] 2017-08-30 14:07:41,319(339) --&gt; [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73): Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]  
[DEBUG] 2017-08-30 14:07:41,362(382) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:141): Loading schema mappings from [META-INF/spring.schemas]  
[DEBUG] 2017-08-30 14:07:41,365(385) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(PluggableSchemaResolver.java:147): Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.alibaba.com/schema/stat.xsd=META-INF/stat.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-4.2.xsd}  
[DEBUG] 2017-08-30 14:07:41,370(390) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119): Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd  
[DEBUG] 2017-08-30 14:07:41,424(444) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119): Found XML schema [http://www.springframework.org/schema/context/spring-context-4.2.xsd] in classpath: org/springframework/context/config/spring-context-4.2.xsd  
[DEBUG] 2017-08-30 14:07:41,442(462) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119): Found XML schema [http://www.springframework.org/schema/tool/spring-tool-4.1.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-4.1.xsd  
[DEBUG] 2017-08-30 14:07:41,458(478) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119): Found XML schema [http://www.springframework.org/schema/tx/spring-tx-4.2.xsd] in classpath: org/springframework/transaction/config/spring-tx-4.2.xsd  
[DEBUG] 2017-08-30 14:07:41,464(484) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119): Found XML schema [http://www.springframework.org/schema/aop/spring-aop-4.2.xsd] in classpath: org/springframework/aop/config/spring-aop-4.2.xsd  
[DEBUG] 2017-08-30 14:07:41,477(497) --&gt; [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92): Loading bean definitions  
[DEBUG] 2017-08-30 14:07:41,509(529) --&gt; [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(DefaultNamespaceHandlerResolver.java:157): Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.alibaba.com/schema/stat=com.alibaba.druid.support.spring.stat.config.DruidStatNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}  
[DEBUG] 2017-08-30 14:07:41,582(602) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.registerDefaultFilters(ClassPathScanningCandidateComponentProvider.java:252): JSR-330 &apos;javax.inject.Named&apos; annotation found and supported for component scanning  
[DEBUG] 2017-08-30 14:07:41,598(618) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631): Looking for matching resources in directory tree [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm]  
[DEBUG] 2017-08-30 14:07:41,599(619) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,616(636) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\dictionary] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,617(637) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\system] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,619(639) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631): Looking for matching resources in directory tree [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm]  
[DEBUG] 2017-08-30 14:07:41,620(640) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,621(641) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,622(642) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,623(643) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\aop] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,625(645) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\des] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,627(647) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\datasource] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,628(648) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\ex] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,629(649) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\publicBean] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,630(650) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,631(651) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\bean] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,631(651) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\filter] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,633(653) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\listenter] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,634(654) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,636(656) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,637(657) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,642(662) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,643(663) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\bean] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,643(663) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,644(664) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplier] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,645(665) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplierPicture] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,649(669) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,650(670) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplier] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,651(671) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplier\impl] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,660(680) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplierPicture] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,661(681) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplierPicture\impl] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,665(685) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\web] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,668(688) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,669(689) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\bean] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,670(690) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,671(691) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\adminlog] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,672(692) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\authorization] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,673(693) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\permissions] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,675(695) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\role] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,675(695) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\user] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,676(696) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,680(700) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\authorization] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,681(701) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\authorization\impl] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,682(702) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\permissions] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,683(703) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\permissions\impl] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,684(704) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\role] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,685(705) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\role\impl] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,686(706) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\user] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,688(708) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\user\impl] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,689(709) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/**/*.class]  
[DEBUG] 2017-08-30 14:07:41,702(722) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424): Resolved location pattern [classpath*:com/flat/srm/**/*.class] to resources [file [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\dictionary\SupplierText.class], file [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\system\UserTest.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\aop\LogInterceptor.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\aop\ThrowingInterceptor.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\BaseController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\BasePathExpsoer.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\des\DESUtils.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\des\EncryptPropertyPlaceholderConfigurer.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\ExamplePlugin.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\core\UTF8StringHttpMessageConverter.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\datasource\DataSourceContextHolder.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\datasource\DataSourceType.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\datasource\DynamicDataSource.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\ex\MyExceptionHandler.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\publicBean\TzParams.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\bean\ShiroToken.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\filter\LoginFormAuthFilter.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\listenter\CustomSessionListener.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\ShiroSessionUtil.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\security\UserRealm.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\ContentListTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\FindRoleTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\JgzFunctions.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\jgzRMB.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\JgzTagCx.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\PermissionsTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\TextTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\TzElseTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\TzIFTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\tag\TzThenTag.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\BooleanEditor.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\DateEditor.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\DateFormateEditor.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\IPEntry.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\IPLocation.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\IPSeeker.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\LogFactory.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\Message.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\TmIPSeeker.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\TmIpUtil.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\TmStringSubUtil.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\ip\Util.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\JgzConstant.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\LoggerUtils.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\SerializeUtil.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\StringToDateConvert.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\stringUtil.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmFileUtil$1.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmFileUtil$2.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmFileUtil$3.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmFileUtil.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmStringUtils$1.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmStringUtils$ENCODING.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common\util\TmStringUtils.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\bean\Supplier.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\bean\SupplierPicture.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplier\ISupplierMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplierPicture\ISupplierPictureMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplier\impl\SupplierServiceImpl.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplier\ISupplierService.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplierPicture\impl\SupplierPictureImpl.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplierPicture\ISupplierPictureService.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\web\SupplierController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\bean\AdminLog.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\bean\Authorization.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\bean\Permissions.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\bean\Role.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\bean\User.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\adminlog\IAdminLogMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\authorization\IAuthorizationMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\permissions\IPermissionsMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\role\IRoleMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\user\IUserMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\authorization\IAuthorizationService.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\authorization\impl\AuthorizationServiceImpl.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\permissions\impl\PermissionsServiceImpl.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\permissions\IPermissionsService.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\role\impl\RoleServiceImpl.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\role\IRoleService.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\user\impl\UserServiceImpl.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\user\IUserService.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\authorizationController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\CaptchaImageCreateController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\DictionaryController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\ErrorController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\IndexController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\LoginController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\PermissionsMGController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\RegisteredController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\RoleMGController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\UploadController.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\web\UserMGController.class]]  
[DEBUG] 2017-08-30 14:07:41,858(878) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplier\ISupplierMapper.class]  
[DEBUG] 2017-08-30 14:07:41,864(884) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplierPicture\ISupplierPictureMapper.class]  
[DEBUG] 2017-08-30 14:07:41,870(890) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplier\impl\SupplierServiceImpl.class]  
[DEBUG] 2017-08-30 14:07:41,882(902) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\service\supplierPicture\impl\SupplierPictureImpl.class]  
[DEBUG] 2017-08-30 14:07:41,901(921) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\adminlog\IAdminLogMapper.class]  
[DEBUG] 2017-08-30 14:07:41,902(922) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\authorization\IAuthorizationMapper.class]  
[DEBUG] 2017-08-30 14:07:41,904(924) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\permissions\IPermissionsMapper.class]  
[DEBUG] 2017-08-30 14:07:41,907(927) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\role\IRoleMapper.class]  
[DEBUG] 2017-08-30 14:07:41,910(930) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:292): Ignored because not a concrete top-level class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\user\IUserMapper.class]  
[DEBUG] 2017-08-30 14:07:41,912(932) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\authorization\impl\AuthorizationServiceImpl.class]  
[DEBUG] 2017-08-30 14:07:41,913(933) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\permissions\impl\PermissionsServiceImpl.class]  
[DEBUG] 2017-08-30 14:07:41,915(935) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\role\impl\RoleServiceImpl.class]  
[DEBUG] 2017-08-30 14:07:41,918(938) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\service\user\impl\UserServiceImpl.class]  
[DEBUG] 2017-08-30 14:07:41,968(988) --&gt; [main] org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481): Neither XML &apos;id&apos; nor &apos;name&apos; specified - using generated bean name [com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0]  
[DEBUG] 2017-08-30 14:07:41,994(1014) --&gt; [main] org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481): Neither XML &apos;id&apos; nor &apos;name&apos; specified - using generated bean name [org.mybatis.spring.mapper.MapperScannerConfigurer#0]  
[DEBUG] 2017-08-30 14:07:42,037(1057) --&gt; [main] org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:481): Neither XML &apos;id&apos; nor &apos;name&apos; specified - using generated bean name [com.google.code.kaptcha.util.Config#2667f029]  
[DEBUG] 2017-08-30 14:07:42,038(1058) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224): Loaded 23 bean definitions from location pattern [classpath:spring/applicationContext.xml]  
[INFO ] 2017-08-30 14:07:42,039(1059) --&gt; [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [spring/applicationContext-shiro.xml]  
[DEBUG] 2017-08-30 14:07:42,042(1062) --&gt; [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73): Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]  
[DEBUG] 2017-08-30 14:07:42,046(1066) --&gt; [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(PluggableSchemaResolver.java:119): Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.2.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.2.xsd  
[DEBUG] 2017-08-30 14:07:42,163(1183) --&gt; [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92): Loading bean definitions  
[DEBUG] 2017-08-30 14:07:42,171(1191) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:224): Loaded 10 bean definitions from location pattern [classpath:spring/applicationContext-shiro.xml]  
[INFO ] 2017-08-30 14:07:42,178(1198) --&gt; [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:573): Refreshing org.springframework.context.support.GenericApplicationContext@5bc79255: startup date [Wed Aug 30 14:07:42 CST 2017]; root of context hierarchy  
[DEBUG] 2017-08-30 14:07:42,179(1199) --&gt; [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:607): Bean factory for org.springframework.context.support.GenericApplicationContext@5bc79255: org.springframework.beans.factory.support.DefaultListableBeanFactory@6a400542: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,supplierServiceImpl,supplierPictureImpl,authorizationServiceImpl,permissionsServiceImpl,roleServiceImpl,userServiceImpl,com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,dataSourceMysql,dynamicDataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,txManage,txAdvice,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,captchaProducer,sessionDAO,shiroFilter,securityManager,userRealm,cacheManager,sessionIdCookie,sessionManager,loginFormAuthFilter,logoutFilter,sessionListener]; root of factory hierarchy  
[DEBUG] 2017-08-30 14:07:42,286(1306) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:42,290(1310) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:42,314(1334) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:42,318(1338) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:42,429(1449) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.mybatis.spring.mapper.MapperScannerConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,432(1452) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.mybatis.spring.mapper.MapperScannerConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,433(1453) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.mybatis.spring.mapper.MapperScannerConfigurer#0&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:42,507(1527) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;org.mybatis.spring.mapper.MapperScannerConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,511(1531) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.mybatis.spring.mapper.MapperScannerConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,519(1539) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [systemProperties] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:42,520(1540) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [systemEnvironment] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:42,522(1542) --&gt; [main] org.springframework.core.env.AbstractEnvironment.&lt;init&gt;(AbstractEnvironment.java:126): Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]  
[DEBUG] 2017-08-30 14:07:42,531(1551) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631): Looking for matching resources in directory tree [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm]  
[DEBUG] 2017-08-30 14:07:42,533(1553) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,534(1554) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\dictionary] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,540(1560) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\system] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,542(1562) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631): Looking for matching resources in directory tree [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm]  
[DEBUG] 2017-08-30 14:07:42,543(1563) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,544(1564) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\common] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,547(1567) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,550(1570) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,551(1571) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplier] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,551(1571) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplierPicture] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,552(1572) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,559(1579) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,563(1583) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\adminlog] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,566(1586) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\authorization] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,567(1587) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\permissions] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,567(1587) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\role] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,568(1588) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\user] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/classes/com/flat/srm/*/dao/**/*.class]  
[DEBUG] 2017-08-30 14:07:42,570(1590) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424): Resolved location pattern [classpath*:com/flat/srm/*/dao/**/*.class] to resources [file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplier\ISupplierMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplierPicture\ISupplierPictureMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\adminlog\IAdminLogMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\authorization\IAuthorizationMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\permissions\IPermissionsMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\role\IRoleMapper.class], file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\user\IUserMapper.class]]  
[DEBUG] 2017-08-30 14:07:42,570(1590) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplier\ISupplierMapper.class]  
[DEBUG] 2017-08-30 14:07:42,571(1591) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\dictionary\dao\supplierPicture\ISupplierPictureMapper.class]  
[DEBUG] 2017-08-30 14:07:42,572(1592) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\adminlog\IAdminLogMapper.class]  
[DEBUG] 2017-08-30 14:07:42,573(1593) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\authorization\IAuthorizationMapper.class]  
[DEBUG] 2017-08-30 14:07:42,573(1593) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\permissions\IPermissionsMapper.class]  
[DEBUG] 2017-08-30 14:07:42,574(1594) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\role\IRoleMapper.class]  
[DEBUG] 2017-08-30 14:07:42,576(1596) --&gt; [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:286): Identified candidate component class: file [D:\learning\development\gitPro\FLATSRM\target\classes\com\flat\srm\system\dao\user\IUserMapper.class]  
[DEBUG] 2017-08-30 14:07:42,577(1597) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;ISupplierMapper&apos; and &apos;com.flat.srm.dictionary.dao.supplier.ISupplierMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,577(1597) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;ISupplierPictureMapper&apos; and &apos;com.flat.srm.dictionary.dao.supplierPicture.ISupplierPictureMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,577(1597) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;IAdminLogMapper&apos; and &apos;com.flat.srm.system.dao.adminlog.IAdminLogMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,578(1598) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;IAuthorizationMapper&apos; and &apos;com.flat.srm.system.dao.authorization.IAuthorizationMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,578(1598) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;IPermissionsMapper&apos; and &apos;com.flat.srm.system.dao.permissions.IPermissionsMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,578(1598) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;IRoleMapper&apos; and &apos;com.flat.srm.system.dao.role.IRoleMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,578(1598) --&gt; [main] org.mybatis.spring.mapper.ClassPathMapperScanner.processBeanDefinitions(ClassPathMapperScanner.java:181): Creating MapperFactoryBean with name &apos;IUserMapper&apos; and &apos;com.flat.srm.system.dao.user.IUserMapper&apos; mapperInterface  
[DEBUG] 2017-08-30 14:07:42,579(1599) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,580(1600) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,581(1601) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:42,591(1611) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,591(1611) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,592(1612) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:42,592(1612) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:42,597(1617) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;  
[INFO ] 2017-08-30 14:07:42,597(1617) --&gt; [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172): Loading properties file from class path resource [db/db.properties]  
[DEBUG] 2017-08-30 14:07:43,100(2120) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [environmentProperties] PropertySource with lowest search precedence  
[INFO ] 2017-08-30 14:07:43,101(2121) --&gt; [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:172): Loading properties file from class path resource [db/db.properties]  
[DEBUG] 2017-08-30 14:07:43,102(2122) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [localProperties] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:43,105(2125) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,106(2126) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;  
[INFO ] 2017-08-30 14:07:43,106(2126) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.&lt;init&gt;(AutowiredAnnotationBeanPostProcessor.java:153): JSR-330 &apos;javax.inject.Inject&apos; annotation found and supported for autowiring  
[DEBUG] 2017-08-30 14:07:43,107(2127) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,107(2127) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,107(2127) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,107(2127) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,108(2128) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,108(2128) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,108(2128) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,108(2128) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,112(2132) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,112(2132) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,112(2132) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,113(2133) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,113(2133) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,113(2133) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,113(2133) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,113(2133) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,113(2133) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,114(2134) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:43,114(2134) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;  
[DEBUG] 2017-08-30 14:07:43,114(2134) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;  
[DEBUG] 2017-08-30 14:07:43,125(2145) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,135(2155) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;  
[DEBUG] 2017-08-30 14:07:43,135(2155) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;shiroFilter&apos;  
[DEBUG] 2017-08-30 14:07:43,136(2156) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;shiroFilter&apos;  
[DEBUG] 2017-08-30 14:07:43,137(2157) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,138(2158) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,139(2159) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,142(2162) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;(inner bean)#740fb309&apos;  
[DEBUG] 2017-08-30 14:07:43,153(2173) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;(inner bean)#740fb309&apos;  
[INFO ] 2017-08-30 14:07:43,154(2174) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos; of type [class org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:43,155(2175) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
SLF4J: Failed to load class &quot;org.slf4j.impl.StaticLoggerBinder&quot;.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
[DEBUG] 2017-08-30 14:07:43,166(2186) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;shiroFilter&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,170(2190) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;securityManager&apos;  
[DEBUG] 2017-08-30 14:07:43,170(2190) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;securityManager&apos;  
[DEBUG] 2017-08-30 14:07:43,171(2191) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,383(2403) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;securityManager&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,399(2419) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;userRealm&apos;  
[DEBUG] 2017-08-30 14:07:43,400(2420) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;userRealm&apos;  
[DEBUG] 2017-08-30 14:07:43,400(2420) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,409(2429) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.common.security.UserRealm]: AutowiredFieldElement for private com.flat.srm.system.service.user.IUserService com.flat.srm.common.security.UserRealm.userService  
[DEBUG] 2017-08-30 14:07:43,410(2430) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.common.security.UserRealm]: AutowiredFieldElement for private org.apache.shiro.session.mgt.eis.SessionDAO com.flat.srm.common.security.UserRealm.sessionDAO  
[DEBUG] 2017-08-30 14:07:43,411(2431) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.common.security.UserRealm]: AutowiredFieldElement for private com.flat.srm.system.service.authorization.IAuthorizationService com.flat.srm.common.security.UserRealm.authorizationService  
[DEBUG] 2017-08-30 14:07:43,411(2431) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;userRealm&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,422(2442) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;userRealm&apos;: AutowiredFieldElement for private com.flat.srm.system.service.user.IUserService com.flat.srm.common.security.UserRealm.userService  
[DEBUG] 2017-08-30 14:07:43,426(2446) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,432(2452) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,433(2453) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,457(2477) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.449 main &gt; org.aspectj.weaver.World$TypeMap.&lt;init&gt; org.aspectj.weaver.World$TypeMap@4dd6fd0a org.aspectj.weaver.reflect.ReflectionWorld@bb9e6dc  
[DEBUG] 2017-08-30 14:07:43,457(2477) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.457 main &lt; org.aspectj.weaver.World$TypeMap.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,459(2479) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.459 main &gt; org.aspectj.weaver.CrosscuttingMembersSet.&lt;init&gt; org.aspectj.weaver.CrosscuttingMembersSet@1cd629b3 org.aspectj.weaver.reflect.ReflectionWorld@bb9e6dc  
[DEBUG] 2017-08-30 14:07:43,460(2480) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.460 main &lt; org.aspectj.weaver.CrosscuttingMembersSet.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,462(2482) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.462 main &gt; org.aspectj.weaver.Lint.&lt;init&gt; org.aspectj.weaver.Lint@1cb346ea org.aspectj.weaver.reflect.ReflectionWorld@bb9e6dc  
[DEBUG] 2017-08-30 14:07:43,462(2482) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.462 main &lt; org.aspectj.weaver.Lint.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,462(2482) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:35): 14:07:43.462 main &gt; org.aspectj.weaver.World.&lt;init&gt; org.aspectj.weaver.reflect.ReflectionWorld@bb9e6dc  
[DEBUG] 2017-08-30 14:07:43,464(2484) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.464 main &gt; org.aspectj.weaver.Dump.registerNode class org.aspectj.weaver.reflect.ReflectionWorld, org.aspectj.weaver.reflect.ReflectionWorld@bb9e6dc  
[DEBUG] 2017-08-30 14:07:43,465(2485) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:41): 14:07:43.465 main &lt; org.aspectj.weaver.Dump.registerNode 1  
[DEBUG] 2017-08-30 14:07:43,475(2495) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.475 main &lt; org.aspectj.weaver.World.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,476(2496) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.476 main &gt; org.aspectj.weaver.World$TypeMap.&lt;init&gt; org.aspectj.weaver.World$TypeMap@42a15bdc org.aspectj.weaver.reflect.ReflectionWorld@44a59da3  
[DEBUG] 2017-08-30 14:07:43,476(2496) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.476 main &lt; org.aspectj.weaver.World$TypeMap.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,476(2496) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.476 main &gt; org.aspectj.weaver.CrosscuttingMembersSet.&lt;init&gt; org.aspectj.weaver.CrosscuttingMembersSet@27e47833 org.aspectj.weaver.reflect.ReflectionWorld@44a59da3  
[DEBUG] 2017-08-30 14:07:43,476(2496) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.476 main &lt; org.aspectj.weaver.CrosscuttingMembersSet.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,477(2497) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.477 main &gt; org.aspectj.weaver.Lint.&lt;init&gt; org.aspectj.weaver.Lint@6f6745d6 org.aspectj.weaver.reflect.ReflectionWorld@44a59da3  
[DEBUG] 2017-08-30 14:07:43,477(2497) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.477 main &lt; org.aspectj.weaver.Lint.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,478(2498) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:35): 14:07:43.478 main &gt; org.aspectj.weaver.World.&lt;init&gt; org.aspectj.weaver.reflect.ReflectionWorld@44a59da3  
[DEBUG] 2017-08-30 14:07:43,478(2498) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.enter(CommonsTrace.java:29): 14:07:43.478 main &gt; org.aspectj.weaver.Dump.registerNode class org.aspectj.weaver.reflect.ReflectionWorld, org.aspectj.weaver.reflect.ReflectionWorld@44a59da3  
[DEBUG] 2017-08-30 14:07:43,478(2498) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:41): 14:07:43.478 main &lt; org.aspectj.weaver.Dump.registerNode 2  
[DEBUG] 2017-08-30 14:07:43,479(2499) --&gt; [main] org.aspectj.weaver.tools.CommonsTrace.exit(CommonsTrace.java:53): 14:07:43.479 main &lt; org.aspectj.weaver.World.&lt;init&gt;  
[DEBUG] 2017-08-30 14:07:43,529(2549) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246): Returning eagerly cached instance of singleton bean &apos;shiroFilter&apos; that is not fully initialized yet - a consequence of a circular reference  
[DEBUG] 2017-08-30 14:07:43,541(2561) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,549(2569) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,550(2570) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,551(2571) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,552(2572) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,553(2573) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,554(2574) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,555(2575) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;userServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:43,555(2575) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;userServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:43,555(2575) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,557(2577) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.system.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private com.flat.srm.system.dao.user.IUserMapper com.flat.srm.system.service.user.impl.UserServiceImpl.userMapper  
[DEBUG] 2017-08-30 14:07:43,558(2578) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.system.service.user.impl.UserServiceImpl]: AutowiredFieldElement for private org.apache.shiro.session.mgt.eis.SessionDAO com.flat.srm.system.service.user.impl.UserServiceImpl.sessionDAO  
[DEBUG] 2017-08-30 14:07:43,558(2578) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;userServiceImpl&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,560(2580) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;userServiceImpl&apos;: AutowiredFieldElement for private com.flat.srm.system.dao.user.IUserMapper com.flat.srm.system.service.user.impl.UserServiceImpl.userMapper  
[DEBUG] 2017-08-30 14:07:43,561(2581) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;IUserMapper&apos;  
[DEBUG] 2017-08-30 14:07:43,562(2582) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;IUserMapper&apos;  
[DEBUG] 2017-08-30 14:07:43,562(2582) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,564(2584) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;IUserMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,570(2590) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:43,571(2591) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:43,571(2591) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,573(2593) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;sqlSessionFactory&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,578(2598) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;dynamicDataSource&apos;  
[DEBUG] 2017-08-30 14:07:43,578(2598) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;dynamicDataSource&apos;  
[DEBUG] 2017-08-30 14:07:43,579(2599) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,582(2602) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;dynamicDataSource&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,588(2608) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;dataSourceMysql&apos;  
[DEBUG] 2017-08-30 14:07:43,588(2608) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;dataSourceMysql&apos;  
[DEBUG] 2017-08-30 14:07:43,589(2609) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:43,633(2653) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;dataSourceMysql&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:43,711(2731) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1678): Invoking init method  &apos;init&apos; on bean with name &apos;dataSourceMysql&apos;  
[INFO ] 2017-08-30 14:07:44,314(3334) --&gt; [main] com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:669): {dataSource-1} inited  
[INFO ] 2017-08-30 14:07:44,314(3334) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;dataSourceMysql&apos; of type [class com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:44,315(3335) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:44,315(3335) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:44,316(3336) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;dataSourceMysql&apos;  
[DEBUG] 2017-08-30 14:07:44,318(3338) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;dataSourceMysql&apos;  
[DEBUG] 2017-08-30 14:07:44,319(3339) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;dynamicDataSource&apos;  
[INFO ] 2017-08-30 14:07:44,319(3339) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;dynamicDataSource&apos; of type [class com.flat.srm.common.datasource.DynamicDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:44,320(3340) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:44,320(3340) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:44,321(3341) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;dynamicDataSource&apos;  
[DEBUG] 2017-08-30 14:07:44,321(3341) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(PathMatchingResourcePatternResolver.java:631): Looking for matching resources in directory tree [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm]  
[DEBUG] 2017-08-30 14:07:44,322(3342) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/*/dao/*/*.xml]  
[DEBUG] 2017-08-30 14:07:44,323(3343) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\dictionary] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/*/dao/*/*.xml]  
[DEBUG] 2017-08-30 14:07:44,324(3344) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(PathMatchingResourcePatternResolver.java:693): Searching directory [D:\learning\development\gitPro\FLATSRM\target\test-classes\com\flat\srm\system] for files matching pattern [D:/learning/development/gitPro/FLATSRM/target/test-classes/com/flat/srm/*/dao/*/*.xml]  
[DEBUG] 2017-08-30 14:07:44,325(3345) --&gt; [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:424): Resolved location pattern [classpath:com/flat/srm/*/dao/*/*.xml] to resources []  
[DEBUG] 2017-08-30 14:07:44,327(3347) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:45,057(4077) --&gt; [main] org.apache.ibatis.logging.LogFactory.setImplementation(LogFactory.java:135): Logging initialized using &apos;class org.apache.ibatis.logging.log4j.Log4jImpl&apos; adapter.  
[INFO ] 2017-08-30 14:07:45,067(4087) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;sqlSessionFactory&apos; of type [class org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,068(4088) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,069(4089) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,069(4089) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;sqlSessionFactory&apos;  
[INFO ] 2017-08-30 14:07:45,070(4090) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;sqlSessionFactory&apos; of type [class org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,070(4090) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,071(4091) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,106(4126) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;IUserMapper&apos;  
[INFO ] 2017-08-30 14:07:45,323(4343) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;IUserMapper&apos; of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,323(4343) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,325(4345) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,326(4346) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;IUserMapper&apos;  
[INFO ] 2017-08-30 14:07:45,339(4359) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;IUserMapper&apos; of type [class com.sun.proxy.$Proxy20] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,341(4361) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,342(4362) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,343(4363) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;userServiceImpl&apos; to bean named &apos;IUserMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,363(4383) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;userServiceImpl&apos;: AutowiredFieldElement for private org.apache.shiro.session.mgt.eis.SessionDAO com.flat.srm.system.service.user.impl.UserServiceImpl.sessionDAO  
[DEBUG] 2017-08-30 14:07:45,366(4386) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:45,367(4387) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:45,368(4388) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,369(4389) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;sessionDAO&apos; to allow for resolving potential circular references  
[INFO ] 2017-08-30 14:07:45,374(4394) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;sessionDAO&apos; of type [class org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,374(4394) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,375(4395) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,375(4395) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:45,376(4396) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;userServiceImpl&apos; to bean named &apos;sessionDAO&apos;  
[INFO ] 2017-08-30 14:07:45,376(4396) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;userServiceImpl&apos; of type [class com.flat.srm.system.service.user.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,377(4397) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,378(4398) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,404(4424) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;txAdvice&apos;  
[DEBUG] 2017-08-30 14:07:45,405(4425) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;txAdvice&apos;  
[DEBUG] 2017-08-30 14:07:45,407(4427) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;txAdvice&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,413(4433) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;txManage&apos;  
[DEBUG] 2017-08-30 14:07:45,414(4434) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;txManage&apos;  
[DEBUG] 2017-08-30 14:07:45,415(4435) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,425(4445) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;txManage&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,431(4451) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;dynamicDataSource&apos;  
[DEBUG] 2017-08-30 14:07:45,432(4452) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;txManage&apos;  
[INFO ] 2017-08-30 14:07:45,433(4453) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;txManage&apos; of type [class org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,433(4453) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,434(4454) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,434(4454) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;txManage&apos;  
[DEBUG] 2017-08-30 14:07:45,435(4455) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;(inner bean)#ea9b7c6&apos;  
[DEBUG] 2017-08-30 14:07:45,435(4455) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,440(4460) --&gt; [main] org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:96): Adding transactional method [find*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]  
[DEBUG] 2017-08-30 14:07:45,440(4460) --&gt; [main] org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:96): Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]  
[DEBUG] 2017-08-30 14:07:45,441(4461) --&gt; [main] org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:96): Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]  
[DEBUG] 2017-08-30 14:07:45,442(4462) --&gt; [main] org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:96): Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]  
[DEBUG] 2017-08-30 14:07:45,443(4463) --&gt; [main] org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource.addTransactionalMethod(NameMatchTransactionAttributeSource.java:96): Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-java.lang.Exception]  
[INFO ] 2017-08-30 14:07:45,444(4464) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;(inner bean)#ea9b7c6&apos; of type [class org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,444(4464) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,445(4465) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,445(4465) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;(inner bean)#ea9b7c6&apos;  
[DEBUG] 2017-08-30 14:07:45,446(4466) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;txAdvice&apos;  
[INFO ] 2017-08-30 14:07:45,447(4467) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;txAdvice&apos; of type [class org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,447(4467) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;txAdvice&apos;  
[DEBUG] 2017-08-30 14:07:45,456(4476) --&gt; [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505): Creating implicit proxy for bean &apos;userServiceImpl&apos; with 0 common interceptors and 2 specific interceptors  
[DEBUG] 2017-08-30 14:07:45,463(4483) --&gt; [main] org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158): Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.flat.srm.system.service.user.impl.UserServiceImpl@3dddefd8]  
[DEBUG] 2017-08-30 14:07:45,542(4562) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.user.impl.UserServiceImpl.update(com.flat.srm.system.bean.User)  
[DEBUG] 2017-08-30 14:07:45,542(4562) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.user.impl.UserServiceImpl.save(com.flat.srm.system.bean.User)  
[DEBUG] 2017-08-30 14:07:45,543(4563) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public com.flat.srm.system.bean.User com.flat.srm.system.service.user.impl.UserServiceImpl.findUser(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,544(4564) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.user.impl.UserServiceImpl.findUsers(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,545(4565) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.user.impl.UserServiceImpl.userRoles(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:45,546(4566) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public com.flat.srm.system.bean.User com.flat.srm.system.service.user.impl.UserServiceImpl.getLogin(java.lang.String)  
[DEBUG] 2017-08-30 14:07:45,546(4566) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.Integer com.flat.srm.system.service.user.impl.UserServiceImpl.pNodeUpdate(java.lang.String,java.lang.Long)  
[DEBUG] 2017-08-30 14:07:45,547(4567) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.Integer com.flat.srm.system.service.user.impl.UserServiceImpl.u_rDelete(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:45,547(4567) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.Integer com.flat.srm.system.service.user.impl.UserServiceImpl.updeletePass(com.flat.srm.system.bean.User)  
[DEBUG] 2017-08-30 14:07:45,548(4568) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.Map com.flat.srm.system.service.user.impl.UserServiceImpl.findRegisteredUsers(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,548(4568) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.user.impl.UserServiceImpl.deleteAll(java.lang.Long) throws java.lang.Exception  
[DEBUG] 2017-08-30 14:07:45,548(4568) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.Boolean com.flat.srm.system.service.user.impl.UserServiceImpl.kickedOutUser(java.lang.String)  
[DEBUG] 2017-08-30 14:07:45,549(4569) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String com.flat.srm.system.service.user.impl.UserServiceImpl.saveAll(java.lang.String,java.lang.String) throws java.lang.Exception  
[DEBUG] 2017-08-30 14:07:45,549(4569) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String com.flat.srm.system.service.user.impl.UserServiceImpl.saveToAuditUser(com.flat.srm.system.bean.User)  
[DEBUG] 2017-08-30 14:07:45,550(4570) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.user.impl.UserServiceImpl.findUserDictionary(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,550(4570) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782): Found finalize() method - using NO_OVERRIDE  
[DEBUG] 2017-08-30 14:07:45,550(4570) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794): Found &apos;equals&apos; method: public boolean java.lang.Object.equals(java.lang.Object)  
[DEBUG] 2017-08-30 14:07:45,551(4571) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()  
[DEBUG] 2017-08-30 14:07:45,551(4571) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799): Found &apos;hashCode&apos; method: public native int java.lang.Object.hashCode()  
[DEBUG] 2017-08-30 14:07:45,551(4571) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException  
[DEBUG] 2017-08-30 14:07:45,552(4572) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:45,552(4572) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:45,553(4573) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()  
[DEBUG] 2017-08-30 14:07:45,553(4573) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)  
[DEBUG] 2017-08-30 14:07:45,553(4573) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,554(4574) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,554(4574) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()  
[DEBUG] 2017-08-30 14:07:45,554(4574) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()  
[DEBUG] 2017-08-30 14:07:45,555(4575) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)  
[DEBUG] 2017-08-30 14:07:45,555(4575) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)  
[DEBUG] 2017-08-30 14:07:45,555(4575) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()  
[DEBUG] 2017-08-30 14:07:45,556(4576) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)  
[DEBUG] 2017-08-30 14:07:45,556(4576) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()  
[DEBUG] 2017-08-30 14:07:45,556(4576) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()  
[DEBUG] 2017-08-30 14:07:45,557(4577) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,557(4577) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,557(4577) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,557(4577) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()  
[DEBUG] 2017-08-30 14:07:45,558(4578) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()  
[DEBUG] 2017-08-30 14:07:45,558(4578) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:45,558(4578) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,558(4578) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:45,559(4579) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()  
[DEBUG] 2017-08-30 14:07:45,588(4608) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;userServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,588(4608) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;userRealm&apos; to bean named &apos;userServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,589(4609) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;userRealm&apos;: AutowiredFieldElement for private org.apache.shiro.session.mgt.eis.SessionDAO com.flat.srm.common.security.UserRealm.sessionDAO  
[DEBUG] 2017-08-30 14:07:45,589(4609) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:45,590(4610) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;userRealm&apos; to bean named &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:45,590(4610) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;userRealm&apos;: AutowiredFieldElement for private com.flat.srm.system.service.authorization.IAuthorizationService com.flat.srm.common.security.UserRealm.authorizationService  
[DEBUG] 2017-08-30 14:07:45,591(4611) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;authorizationServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,591(4611) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;authorizationServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,592(4612) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,593(4613) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl]: AutowiredFieldElement for private com.flat.srm.system.dao.authorization.IAuthorizationMapper com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.authorizationMapper  
[DEBUG] 2017-08-30 14:07:45,593(4613) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;authorizationServiceImpl&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,596(4616) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;authorizationServiceImpl&apos;: AutowiredFieldElement for private com.flat.srm.system.dao.authorization.IAuthorizationMapper com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.authorizationMapper  
[DEBUG] 2017-08-30 14:07:45,597(4617) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;IAuthorizationMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,598(4618) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;IAuthorizationMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,598(4618) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,599(4619) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;IAuthorizationMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,599(4619) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:45,600(4620) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;IAuthorizationMapper&apos;  
[INFO ] 2017-08-30 14:07:45,624(4644) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;IAuthorizationMapper&apos; of type [class org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,625(4645) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,629(4649) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,630(4650) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;IAuthorizationMapper&apos;  
[INFO ] 2017-08-30 14:07:45,634(4654) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;IAuthorizationMapper&apos; of type [class com.sun.proxy.$Proxy21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,634(4654) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,635(4655) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,635(4655) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;authorizationServiceImpl&apos; to bean named &apos;IAuthorizationMapper&apos;  
[INFO ] 2017-08-30 14:07:45,636(4656) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;authorizationServiceImpl&apos; of type [class com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,638(4658) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,638(4658) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,639(4659) --&gt; [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505): Creating implicit proxy for bean &apos;authorizationServiceImpl&apos; with 0 common interceptors and 2 specific interceptors  
[DEBUG] 2017-08-30 14:07:45,639(4659) --&gt; [main] org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158): Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl@19fe4644]  
[DEBUG] 2017-08-30 14:07:45,641(4661) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.update(com.flat.srm.system.bean.Authorization)  
[DEBUG] 2017-08-30 14:07:45,642(4662) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public com.flat.srm.system.bean.Authorization com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.find(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:45,642(4662) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.delete(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:45,643(4663) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.save(com.flat.srm.common.publicBean.TzParams) throws java.lang.Exception  
[DEBUG] 2017-08-30 14:07:45,643(4663) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.Map com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.findMap(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:45,644(4664) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.findAll(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,644(4664) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.authorization.impl.AuthorizationServiceImpl.finds(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,645(4665) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782): Found finalize() method - using NO_OVERRIDE  
[DEBUG] 2017-08-30 14:07:45,646(4666) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794): Found &apos;equals&apos; method: public boolean java.lang.Object.equals(java.lang.Object)  
[DEBUG] 2017-08-30 14:07:45,647(4667) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()  
[DEBUG] 2017-08-30 14:07:45,647(4667) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799): Found &apos;hashCode&apos; method: public native int java.lang.Object.hashCode()  
[DEBUG] 2017-08-30 14:07:45,647(4667) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException  
[DEBUG] 2017-08-30 14:07:45,648(4668) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:45,648(4668) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:45,648(4668) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()  
[DEBUG] 2017-08-30 14:07:45,648(4668) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)  
[DEBUG] 2017-08-30 14:07:45,648(4668) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,649(4669) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,649(4669) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()  
[DEBUG] 2017-08-30 14:07:45,649(4669) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()  
[DEBUG] 2017-08-30 14:07:45,649(4669) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)  
[DEBUG] 2017-08-30 14:07:45,650(4670) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)  
[DEBUG] 2017-08-30 14:07:45,650(4670) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()  
[DEBUG] 2017-08-30 14:07:45,650(4670) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)  
[DEBUG] 2017-08-30 14:07:45,651(4671) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()  
[DEBUG] 2017-08-30 14:07:45,651(4671) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()  
[DEBUG] 2017-08-30 14:07:45,651(4671) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,651(4671) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,651(4671) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,652(4672) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()  
[DEBUG] 2017-08-30 14:07:45,652(4672) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()  
[DEBUG] 2017-08-30 14:07:45,652(4672) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:45,652(4672) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,652(4672) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:45,653(4673) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()  
[DEBUG] 2017-08-30 14:07:45,663(4683) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;authorizationServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,663(4683) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;userRealm&apos; to bean named &apos;authorizationServiceImpl&apos;  
[INFO ] 2017-08-30 14:07:45,663(4683) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;userRealm&apos; of type [class com.flat.srm.common.security.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,664(4684) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,664(4684) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,664(4684) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;userRealm&apos;  
[DEBUG] 2017-08-30 14:07:45,665(4685) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;cacheManager&apos;  
[DEBUG] 2017-08-30 14:07:45,665(4685) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;cacheManager&apos;  
[DEBUG] 2017-08-30 14:07:45,665(4685) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,671(4691) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;cacheManager&apos; to allow for resolving potential circular references  
[INFO ] 2017-08-30 14:07:45,673(4693) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;cacheManager&apos; of type [class org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,674(4694) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,674(4694) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,674(4694) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;cacheManager&apos;  
[DEBUG] 2017-08-30 14:07:45,675(4695) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;sessionManager&apos;  
[DEBUG] 2017-08-30 14:07:45,675(4695) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;sessionManager&apos;  
[DEBUG] 2017-08-30 14:07:45,675(4695) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,677(4697) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;sessionManager&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,685(4705) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:45,685(4705) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;sessionIdCookie&apos;  
[DEBUG] 2017-08-30 14:07:45,685(4705) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;sessionIdCookie&apos;  
[DEBUG] 2017-08-30 14:07:45,686(4706) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,691(4711) --&gt; [main] org.springframework.beans.BeanUtils.findEditorByConvention(BeanUtils.java:455): No property editor [org.apache.shiro.web.servlet.CookieEditor] found for type org.apache.shiro.web.servlet.Cookie according to &apos;Editor&apos; suffix convention  
[DEBUG] 2017-08-30 14:07:45,693(4713) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;sessionIdCookie&apos; to allow for resolving potential circular references  
[INFO ] 2017-08-30 14:07:45,696(4716) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;sessionIdCookie&apos; of type [class org.apache.shiro.web.servlet.SimpleCookie] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,697(4717) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,697(4717) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,697(4717) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;sessionIdCookie&apos;  
[INFO ] 2017-08-30 14:07:45,698(4718) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;sessionManager&apos; of type [class org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,698(4718) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,698(4718) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,699(4719) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;sessionManager&apos;  
[INFO ] 2017-08-30 14:07:45,904(4924) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;securityManager&apos; of type [class org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,905(4925) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,905(4925) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,905(4925) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;securityManager&apos;  
[DEBUG] 2017-08-30 14:07:45,906(4926) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;loginFormAuthFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,906(4926) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;loginFormAuthFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,906(4926) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,910(4930) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;loginFormAuthFilter&apos; to allow for resolving potential circular references  
[INFO ] 2017-08-30 14:07:45,920(4940) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;loginFormAuthFilter&apos; of type [class com.flat.srm.common.security.filter.LoginFormAuthFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,921(4941) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,921(4941) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,922(4942) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;loginFormAuthFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,922(4942) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;logoutFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,923(4943) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;logoutFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,923(4943) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,924(4944) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;logoutFilter&apos; to allow for resolving potential circular references  
[INFO ] 2017-08-30 14:07:45,927(4947) --&gt; [main] org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:328): Bean &apos;logoutFilter&apos; of type [class org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)  
[DEBUG] 2017-08-30 14:07:45,928(4948) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,928(4948) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,928(4948) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;logoutFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,934(4954) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;shiroFilter&apos;  
[DEBUG] 2017-08-30 14:07:45,936(4956) --&gt; [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:713): Unable to locate MessageSource with name &apos;messageSource&apos;: using default [org.springframework.context.support.DelegatingMessageSource@7048f722]  
[DEBUG] 2017-08-30 14:07:45,938(4958) --&gt; [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:737): Unable to locate ApplicationEventMulticaster with name &apos;applicationEventMulticaster&apos;: using default [org.springframework.context.event.SimpleApplicationEventMulticaster@733037]  
[DEBUG] 2017-08-30 14:07:45,939(4959) --&gt; [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:741): Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a400542: defining beans [org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,supplierServiceImpl,supplierPictureImpl,authorizationServiceImpl,permissionsServiceImpl,roleServiceImpl,userServiceImpl,com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0,org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0,dataSourceMysql,dynamicDataSource,sqlSessionFactory,org.mybatis.spring.mapper.MapperScannerConfigurer#0,txManage,txAdvice,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0,captchaProducer,sessionDAO,shiroFilter,securityManager,userRealm,cacheManager,sessionIdCookie,sessionManager,loginFormAuthFilter,logoutFilter,sessionListener,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor,ISupplierMapper,ISupplierPictureMapper,IAdminLogMapper,IAuthorizationMapper,IPermissionsMapper,IRoleMapper,IUserMapper]; root of factory hierarchy  
[DEBUG] 2017-08-30 14:07:45,940(4960) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalConfigurationAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,940(4960) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalAutowiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,940(4960) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalRequiredAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,941(4961) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.annotation.internalCommonAnnotationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,942(4962) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.event.internalEventListenerProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,942(4962) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.event.internalEventListenerProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,942(4962) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,944(4964) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.event.internalEventListenerProcessor&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,946(4966) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,947(4967) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,947(4967) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.event.internalEventListenerProcessor&apos;  
[DEBUG] 2017-08-30 14:07:45,947(4967) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;org.springframework.context.event.internalEventListenerFactory&apos;  
[DEBUG] 2017-08-30 14:07:45,948(4968) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;org.springframework.context.event.internalEventListenerFactory&apos;  
[DEBUG] 2017-08-30 14:07:45,948(4968) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,948(4968) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;org.springframework.context.event.internalEventListenerFactory&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,950(4970) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,950(4970) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,951(4971) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;org.springframework.context.event.internalEventListenerFactory&apos;  
[DEBUG] 2017-08-30 14:07:45,951(4971) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;supplierServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,951(4971) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;supplierServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,951(4971) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,952(4972) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.dictionary.service.supplier.impl.SupplierServiceImpl]: AutowiredFieldElement for private com.flat.srm.dictionary.dao.supplier.ISupplierMapper com.flat.srm.dictionary.service.supplier.impl.SupplierServiceImpl.supplierMapper  
[DEBUG] 2017-08-30 14:07:45,953(4973) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;supplierServiceImpl&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,954(4974) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;supplierServiceImpl&apos;: AutowiredFieldElement for private com.flat.srm.dictionary.dao.supplier.ISupplierMapper com.flat.srm.dictionary.service.supplier.impl.SupplierServiceImpl.supplierMapper  
[DEBUG] 2017-08-30 14:07:45,955(4975) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;ISupplierMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,955(4975) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;ISupplierMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,956(4976) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,956(4976) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;ISupplierMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,956(4976) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:45,957(4977) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;ISupplierMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,971(4991) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,972(4992) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,972(4992) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;ISupplierMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,974(4994) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,974(4994) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,975(4995) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;supplierServiceImpl&apos; to bean named &apos;ISupplierMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,975(4995) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,976(4996) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,976(4996) --&gt; [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505): Creating implicit proxy for bean &apos;supplierServiceImpl&apos; with 0 common interceptors and 2 specific interceptors  
[DEBUG] 2017-08-30 14:07:45,976(4996) --&gt; [main] org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158): Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.flat.srm.dictionary.service.supplier.impl.SupplierServiceImpl@255990cc]  
[DEBUG] 2017-08-30 14:07:45,978(4998) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.Map com.flat.srm.dictionary.service.supplier.impl.SupplierServiceImpl.find(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:45,979(4999) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.Long com.flat.srm.dictionary.service.supplier.impl.SupplierServiceImpl.save(com.flat.srm.dictionary.bean.Supplier)  
[DEBUG] 2017-08-30 14:07:45,980(5000) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782): Found finalize() method - using NO_OVERRIDE  
[DEBUG] 2017-08-30 14:07:45,980(5000) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794): Found &apos;equals&apos; method: public boolean java.lang.Object.equals(java.lang.Object)  
[DEBUG] 2017-08-30 14:07:45,980(5000) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()  
[DEBUG] 2017-08-30 14:07:45,981(5001) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799): Found &apos;hashCode&apos; method: public native int java.lang.Object.hashCode()  
[DEBUG] 2017-08-30 14:07:45,981(5001) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException  
[DEBUG] 2017-08-30 14:07:45,981(5001) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:45,981(5001) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:45,982(5002) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()  
[DEBUG] 2017-08-30 14:07:45,982(5002) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)  
[DEBUG] 2017-08-30 14:07:45,982(5002) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,982(5002) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,983(5003) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()  
[DEBUG] 2017-08-30 14:07:45,983(5003) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()  
[DEBUG] 2017-08-30 14:07:45,983(5003) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)  
[DEBUG] 2017-08-30 14:07:45,983(5003) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)  
[DEBUG] 2017-08-30 14:07:45,983(5003) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()  
[DEBUG] 2017-08-30 14:07:45,984(5004) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)  
[DEBUG] 2017-08-30 14:07:45,984(5004) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()  
[DEBUG] 2017-08-30 14:07:45,984(5004) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()  
[DEBUG] 2017-08-30 14:07:45,985(5005) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,985(5005) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,985(5005) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,985(5005) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()  
[DEBUG] 2017-08-30 14:07:45,985(5005) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()  
[DEBUG] 2017-08-30 14:07:45,985(5005) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:45,986(5006) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:45,986(5006) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:45,987(5007) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()  
[DEBUG] 2017-08-30 14:07:45,993(5013) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;supplierServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,995(5015) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;supplierPictureImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,995(5015) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;supplierPictureImpl&apos;  
[DEBUG] 2017-08-30 14:07:45,995(5015) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:45,996(5016) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.dictionary.service.supplierPicture.impl.SupplierPictureImpl]: AutowiredFieldElement for private com.flat.srm.dictionary.dao.supplierPicture.ISupplierPictureMapper com.flat.srm.dictionary.service.supplierPicture.impl.SupplierPictureImpl.supplierPictureMapper  
[DEBUG] 2017-08-30 14:07:45,996(5016) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;supplierPictureImpl&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:45,998(5018) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;supplierPictureImpl&apos;: AutowiredFieldElement for private com.flat.srm.dictionary.dao.supplierPicture.ISupplierPictureMapper com.flat.srm.dictionary.service.supplierPicture.impl.SupplierPictureImpl.supplierPictureMapper  
[DEBUG] 2017-08-30 14:07:45,999(5019) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;ISupplierPictureMapper&apos;  
[DEBUG] 2017-08-30 14:07:45,999(5019) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;ISupplierPictureMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,000(5020) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,000(5020) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;ISupplierPictureMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,000(5020) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,001(5021) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;ISupplierPictureMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,010(5030) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,010(5030) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,011(5031) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;ISupplierPictureMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,013(5033) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,013(5033) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,014(5034) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;supplierPictureImpl&apos; to bean named &apos;ISupplierPictureMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,014(5034) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,014(5034) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,015(5035) --&gt; [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505): Creating implicit proxy for bean &apos;supplierPictureImpl&apos; with 0 common interceptors and 2 specific interceptors  
[DEBUG] 2017-08-30 14:07:46,015(5035) --&gt; [main] org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158): Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.flat.srm.dictionary.service.supplierPicture.impl.SupplierPictureImpl@62c5bbdc]  
[DEBUG] 2017-08-30 14:07:46,016(5036) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public com.flat.srm.dictionary.bean.SupplierPicture com.flat.srm.dictionary.service.supplierPicture.impl.SupplierPictureImpl.find(java.lang.String)  
[DEBUG] 2017-08-30 14:07:46,016(5036) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.Integer com.flat.srm.dictionary.service.supplierPicture.impl.SupplierPictureImpl.save(com.flat.srm.dictionary.bean.SupplierPicture)  
[DEBUG] 2017-08-30 14:07:46,018(5038) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782): Found finalize() method - using NO_OVERRIDE  
[DEBUG] 2017-08-30 14:07:46,019(5039) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794): Found &apos;equals&apos; method: public boolean java.lang.Object.equals(java.lang.Object)  
[DEBUG] 2017-08-30 14:07:46,019(5039) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()  
[DEBUG] 2017-08-30 14:07:46,020(5040) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799): Found &apos;hashCode&apos; method: public native int java.lang.Object.hashCode()  
[DEBUG] 2017-08-30 14:07:46,020(5040) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException  
[DEBUG] 2017-08-30 14:07:46,021(5041) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:46,021(5041) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:46,021(5041) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()  
[DEBUG] 2017-08-30 14:07:46,022(5042) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)  
[DEBUG] 2017-08-30 14:07:46,022(5042) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,022(5042) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,022(5042) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()  
[DEBUG] 2017-08-30 14:07:46,023(5043) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()  
[DEBUG] 2017-08-30 14:07:46,023(5043) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)  
[DEBUG] 2017-08-30 14:07:46,023(5043) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)  
[DEBUG] 2017-08-30 14:07:46,024(5044) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()  
[DEBUG] 2017-08-30 14:07:46,024(5044) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)  
[DEBUG] 2017-08-30 14:07:46,024(5044) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()  
[DEBUG] 2017-08-30 14:07:46,025(5045) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()  
[DEBUG] 2017-08-30 14:07:46,025(5045) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,025(5045) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,026(5046) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,026(5046) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()  
[DEBUG] 2017-08-30 14:07:46,027(5047) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()  
[DEBUG] 2017-08-30 14:07:46,027(5047) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:46,028(5048) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,028(5048) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:46,029(5049) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()  
[DEBUG] 2017-08-30 14:07:46,036(5056) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;supplierPictureImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,037(5057) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;authorizationServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,037(5057) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;permissionsServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,037(5057) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;permissionsServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,037(5057) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,038(5058) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl]: AutowiredFieldElement for private com.flat.srm.system.dao.permissions.IPermissionsMapper com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.permissionsMapper  
[DEBUG] 2017-08-30 14:07:46,038(5058) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;permissionsServiceImpl&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,039(5059) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;permissionsServiceImpl&apos;: AutowiredFieldElement for private com.flat.srm.system.dao.permissions.IPermissionsMapper com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.permissionsMapper  
[DEBUG] 2017-08-30 14:07:46,040(5060) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;IPermissionsMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,040(5060) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;IPermissionsMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,040(5060) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,041(5061) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;IPermissionsMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,042(5062) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,042(5062) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;IPermissionsMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,060(5080) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,060(5080) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,062(5082) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;IPermissionsMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,063(5083) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,064(5084) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,065(5085) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;permissionsServiceImpl&apos; to bean named &apos;IPermissionsMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,066(5086) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,066(5086) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,067(5087) --&gt; [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505): Creating implicit proxy for bean &apos;permissionsServiceImpl&apos; with 0 common interceptors and 2 specific interceptors  
[DEBUG] 2017-08-30 14:07:46,067(5087) --&gt; [main] org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158): Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl@182b435b]  
[DEBUG] 2017-08-30 14:07:46,068(5088) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.update(com.flat.srm.system.bean.Permissions)  
[DEBUG] 2017-08-30 14:07:46,068(5088) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public com.flat.srm.system.bean.Permissions com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.find(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,069(5089) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.delete(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:46,069(5089) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.findPermissionss(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,069(5089) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.saveAll(com.flat.srm.system.bean.Permissions,java.lang.String) throws java.lang.Exception  
[DEBUG] 2017-08-30 14:07:46,070(5090) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.permissions.impl.PermissionsServiceImpl.finds(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,070(5090) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782): Found finalize() method - using NO_OVERRIDE  
[DEBUG] 2017-08-30 14:07:46,070(5090) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794): Found &apos;equals&apos; method: public boolean java.lang.Object.equals(java.lang.Object)  
[DEBUG] 2017-08-30 14:07:46,071(5091) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()  
[DEBUG] 2017-08-30 14:07:46,071(5091) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799): Found &apos;hashCode&apos; method: public native int java.lang.Object.hashCode()  
[DEBUG] 2017-08-30 14:07:46,071(5091) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException  
[DEBUG] 2017-08-30 14:07:46,072(5092) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:46,072(5092) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:46,072(5092) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()  
[DEBUG] 2017-08-30 14:07:46,073(5093) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)  
[DEBUG] 2017-08-30 14:07:46,074(5094) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,074(5094) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,075(5095) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()  
[DEBUG] 2017-08-30 14:07:46,075(5095) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()  
[DEBUG] 2017-08-30 14:07:46,075(5095) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)  
[DEBUG] 2017-08-30 14:07:46,075(5095) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)  
[DEBUG] 2017-08-30 14:07:46,075(5095) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()  
[DEBUG] 2017-08-30 14:07:46,076(5096) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)  
[DEBUG] 2017-08-30 14:07:46,077(5097) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()  
[DEBUG] 2017-08-30 14:07:46,077(5097) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()  
[DEBUG] 2017-08-30 14:07:46,079(5099) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,080(5100) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,080(5100) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,081(5101) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()  
[DEBUG] 2017-08-30 14:07:46,082(5102) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()  
[DEBUG] 2017-08-30 14:07:46,082(5102) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:46,082(5102) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,082(5102) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:46,083(5103) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()  
[DEBUG] 2017-08-30 14:07:46,125(5145) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;permissionsServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,125(5145) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;roleServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,126(5146) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;roleServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,126(5146) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,129(5149) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.system.service.role.impl.RoleServiceImpl]: AutowiredFieldElement for private com.flat.srm.system.dao.role.IRoleMapper com.flat.srm.system.service.role.impl.RoleServiceImpl.roleMapper  
[DEBUG] 2017-08-30 14:07:46,129(5149) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.checkConfigMembers(InjectionMetadata.java:72): Registered injected element on class [com.flat.srm.system.service.role.impl.RoleServiceImpl]: AutowiredFieldElement for private com.flat.srm.system.dao.authorization.IAuthorizationMapper com.flat.srm.system.service.role.impl.RoleServiceImpl.authorizationMapper  
[DEBUG] 2017-08-30 14:07:46,130(5150) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;roleServiceImpl&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,131(5151) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;roleServiceImpl&apos;: AutowiredFieldElement for private com.flat.srm.system.dao.role.IRoleMapper com.flat.srm.system.service.role.impl.RoleServiceImpl.roleMapper  
[DEBUG] 2017-08-30 14:07:46,140(5160) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;IRoleMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,140(5160) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;IRoleMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,141(5161) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,141(5161) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;IRoleMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,142(5162) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,144(5164) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;IRoleMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,187(5207) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,187(5207) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,187(5207) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;IRoleMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,219(5239) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,220(5240) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,223(5243) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;roleServiceImpl&apos; to bean named &apos;IRoleMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,223(5243) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;roleServiceImpl&apos;: AutowiredFieldElement for private com.flat.srm.system.dao.authorization.IAuthorizationMapper com.flat.srm.system.service.role.impl.RoleServiceImpl.authorizationMapper  
[DEBUG] 2017-08-30 14:07:46,224(5244) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;IAuthorizationMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,224(5244) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;roleServiceImpl&apos; to bean named &apos;IAuthorizationMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,225(5245) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,225(5245) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,226(5246) --&gt; [main] org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.buildAdvisors(AbstractAutoProxyCreator.java:505): Creating implicit proxy for bean &apos;roleServiceImpl&apos; with 0 common interceptors and 2 specific interceptors  
[DEBUG] 2017-08-30 14:07:46,226(5246) --&gt; [main] org.springframework.aop.framework.CglibAopProxy.getProxy(CglibAopProxy.java:158): Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.flat.srm.system.service.role.impl.RoleServiceImpl@3f2049b6]  
[DEBUG] 2017-08-30 14:07:46,232(5252) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.role.impl.RoleServiceImpl.update(com.flat.srm.system.bean.Role)  
[DEBUG] 2017-08-30 14:07:46,232(5252) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public com.flat.srm.system.bean.Role com.flat.srm.system.service.role.impl.RoleServiceImpl.find(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,233(5253) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.role.impl.RoleServiceImpl.save(com.flat.srm.system.bean.Role)  
[DEBUG] 2017-08-30 14:07:46,233(5253) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public int com.flat.srm.system.service.role.impl.RoleServiceImpl.deleteAll(java.lang.Long) throws java.lang.Exception  
[DEBUG] 2017-08-30 14:07:46,234(5254) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.role.impl.RoleServiceImpl.findLodinRoles(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,234(5254) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.role.impl.RoleServiceImpl.findRoles(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,234(5254) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.role.impl.RoleServiceImpl.findRoleUsers(java.lang.Long)  
[DEBUG] 2017-08-30 14:07:46,235(5255) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String com.flat.srm.system.service.role.impl.RoleServiceImpl.saveAll(java.lang.String,java.lang.String) throws java.lang.Exception  
[DEBUG] 2017-08-30 14:07:46,236(5256) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.util.List com.flat.srm.system.service.role.impl.RoleServiceImpl.finds(com.flat.srm.common.publicBean.TzParams)  
[DEBUG] 2017-08-30 14:07:46,237(5257) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:782): Found finalize() method - using NO_OVERRIDE  
[DEBUG] 2017-08-30 14:07:46,237(5257) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:794): Found &apos;equals&apos; method: public boolean java.lang.Object.equals(java.lang.Object)  
[DEBUG] 2017-08-30 14:07:46,238(5258) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()  
[DEBUG] 2017-08-30 14:07:46,238(5258) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:799): Found &apos;hashCode&apos; method: public native int java.lang.Object.hashCode()  
[DEBUG] 2017-08-30 14:07:46,239(5259) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:831): Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException  
[DEBUG] 2017-08-30 14:07:46,239(5259) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:46,239(5259) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:46,239(5259) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()  
[DEBUG] 2017-08-30 14:07:46,240(5260) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)  
[DEBUG] 2017-08-30 14:07:46,240(5260) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,240(5260) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,240(5260) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()  
[DEBUG] 2017-08-30 14:07:46,241(5261) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()  
[DEBUG] 2017-08-30 14:07:46,241(5261) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)  
[DEBUG] 2017-08-30 14:07:46,241(5261) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)  
[DEBUG] 2017-08-30 14:07:46,241(5261) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()  
[DEBUG] 2017-08-30 14:07:46,242(5262) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)  
[DEBUG] 2017-08-30 14:07:46,242(5262) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()  
[DEBUG] 2017-08-30 14:07:46,242(5262) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()  
[DEBUG] 2017-08-30 14:07:46,244(5264) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,244(5264) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,248(5268) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,248(5268) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()  
[DEBUG] 2017-08-30 14:07:46,249(5269) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()  
[DEBUG] 2017-08-30 14:07:46,249(5269) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)  
[DEBUG] 2017-08-30 14:07:46,249(5269) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException  
[DEBUG] 2017-08-30 14:07:46,250(5270) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)  
[DEBUG] 2017-08-30 14:07:46,250(5270) --&gt; [main] org.springframework.aop.framework.CglibAopProxy$ProxyCallbackFilter.accept(CglibAopProxy.java:788): Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()  
[DEBUG] 2017-08-30 14:07:46,260(5280) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;roleServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,260(5280) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;userServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,261(5281) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;com.flat.srm.common.core.des.EncryptPropertyPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:46,261(5281) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.support.PropertySourcesPlaceholderConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:46,261(5281) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;dataSourceMysql&apos;  
[DEBUG] 2017-08-30 14:07:46,262(5282) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;dynamicDataSource&apos;  
[DEBUG] 2017-08-30 14:07:46,263(5283) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,265(5285) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.mybatis.spring.mapper.MapperScannerConfigurer#0&apos;  
[DEBUG] 2017-08-30 14:07:46,266(5286) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;txManage&apos;  
[DEBUG] 2017-08-30 14:07:46,266(5286) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;txAdvice&apos;  
[DEBUG] 2017-08-30 14:07:46,266(5286) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.config.internalAutoProxyCreator&apos;  
[DEBUG] 2017-08-30 14:07:46,266(5286) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,266(5286) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;captchaProducer&apos;  
[DEBUG] 2017-08-30 14:07:46,267(5287) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;captchaProducer&apos;  
[DEBUG] 2017-08-30 14:07:46,267(5287) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,269(5289) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;captchaProducer&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,273(5293) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;com.google.code.kaptcha.util.Config#2667f029&apos;  
[DEBUG] 2017-08-30 14:07:46,274(5294) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,280(5300) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,280(5300) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,280(5300) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;com.google.code.kaptcha.util.Config#2667f029&apos;  
[DEBUG] 2017-08-30 14:07:46,280(5300) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,281(5301) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,281(5301) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;captchaProducer&apos;  
[DEBUG] 2017-08-30 14:07:46,281(5301) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sessionDAO&apos;  
[DEBUG] 2017-08-30 14:07:46,281(5301) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;shiroFilter&apos;  
[DEBUG] 2017-08-30 14:07:46,281(5301) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;securityManager&apos;  
[DEBUG] 2017-08-30 14:07:46,281(5301) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;userRealm&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;cacheManager&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sessionIdCookie&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sessionManager&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;loginFormAuthFilter&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;logoutFilter&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;sessionListener&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;sessionListener&apos;  
[DEBUG] 2017-08-30 14:07:46,282(5302) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,283(5303) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;sessionListener&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,288(5308) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,288(5308) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,289(5309) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;sessionListener&apos;  
[DEBUG] 2017-08-30 14:07:46,289(5309) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor&apos;  
[DEBUG] 2017-08-30 14:07:46,289(5309) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor&apos;  
[DEBUG] 2017-08-30 14:07:46,289(5309) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;ISupplierMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,289(5309) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;ISupplierPictureMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,290(5310) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;IAdminLogMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,290(5310) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;IAdminLogMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,290(5310) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,290(5310) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;IAdminLogMapper&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,291(5311) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,291(5311) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1620): Invoking afterPropertiesSet() on bean with name &apos;IAdminLogMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,292(5312) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,293(5313) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,293(5313) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;IAdminLogMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,294(5314) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;IAuthorizationMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,294(5314) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;IPermissionsMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,294(5314) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;IRoleMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,294(5314) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;IUserMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,295(5315) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.context.event.internalEventListenerFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,298(5318) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;supplierServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,299(5319) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;supplierPictureImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,299(5319) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;authorizationServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,300(5320) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;permissionsServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,300(5320) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;roleServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,301(5321) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;userServiceImpl&apos;  
[DEBUG] 2017-08-30 14:07:46,338(5358) --&gt; [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:764): Unable to locate LifecycleProcessor with name &apos;lifecycleProcessor&apos;: using default [org.springframework.context.support.DefaultLifecycleProcessor@6b739528]  
[DEBUG] 2017-08-30 14:07:46,339(5359) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;lifecycleProcessor&apos;  
[DEBUG] 2017-08-30 14:07:46,342(5362) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;sqlSessionFactory&apos;  
[DEBUG] 2017-08-30 14:07:46,343(5363) --&gt; [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81): Searching for key &apos;spring.liveBeansView.mbeanDomain&apos; in [systemProperties]  
[DEBUG] 2017-08-30 14:07:46,344(5364) --&gt; [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:81): Searching for key &apos;spring.liveBeansView.mbeanDomain&apos; in [systemEnvironment]  
[DEBUG] 2017-08-30 14:07:46,344(5364) --&gt; [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:103): Could not find key &apos;spring.liveBeansView.mbeanDomain&apos; in any property source. Returning [null]  
[DEBUG] 2017-08-30 14:07:46,353(5373) --&gt; [main] org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:118): Storing ApplicationContext in cache under key [[MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]]]  
[DEBUG] 2017-08-30 14:07:46,355(5375) --&gt; [main] org.springframework.test.context.cache.DefaultContextCache.logStatistics(DefaultContextCache.java:247): Spring test ApplicationContext cache statistics: [DefaultContextCache@49ef32e0 size = 1, parentContextCount = 0, hitCount = 0, missCount = 1]  
[DEBUG] 2017-08-30 14:07:46,358(5378) --&gt; [main] org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:86): Processing injected element of bean &apos;com.flat.srm.system.UserTest&apos;: AutowiredFieldElement for private com.flat.srm.system.dao.user.IUserMapper com.flat.srm.system.UserTest.userMapper  
[DEBUG] 2017-08-30 14:07:46,359(5379) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;IUserMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,359(5379) --&gt; [main] org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.registerDependentBeans(AutowiredAnnotationBeanPostProcessor.java:490): Autowiring by type from bean name &apos;com.flat.srm.system.UserTest&apos; to bean named &apos;IUserMapper&apos;  
[DEBUG] 2017-08-30 14:07:46,360(5380) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,360(5380) --&gt; [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:250): Returning cached instance of singleton bean &apos;org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0&apos;  
[DEBUG] 2017-08-30 14:07:46,368(5388) --&gt; [main] org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106): Before test method: context [DefaultTestContext@148080bb testClass = UserTest, testInstance = com.flat.srm.system.UserTest@66480dd7, testMethod = saveUser@UserTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].  
[DEBUG] 2017-08-30 14:07:46,418(5438) --&gt; [main] org.mybatis.spring.SqlSessionUtils.getSqlSession(SqlSessionUtils.java:99): Creating a new SqlSession  
[DEBUG] 2017-08-30 14:07:46,443(5463) --&gt; [main] org.mybatis.spring.SqlSessionUtils.registerSessionHolder(SqlSessionUtils.java:150): SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e34c607] was not registered for synchronization because synchronization is not active  
[DEBUG] 2017-08-30 14:07:46,492(5512) --&gt; [main] org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110): Fetching JDBC Connection from DataSource  
[DEBUG] 2017-08-30 14:07:46,500(5520) --&gt; [main] org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:87): JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3e1162e7] will not be managed by Spring  
[DEBUG] 2017-08-30 14:07:46,505(5525) --&gt; [main] org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:145): ==&gt;  Preparing: insert into cp_user ( NAME, MAIL, PID ) values ( &apos;text1&apos;, &apos;70&apos;, ? )   
[DEBUG] 2017-08-30 14:07:46,552(5572) --&gt; [main] org.apache.ibatis.logging.jdbc.BaseJdbcLogger.debug(BaseJdbcLogger.java:145): ==&gt; Parameters: 1(Long)  
[DEBUG] 2017-08-30 14:07:46,569(5589) --&gt; [main] org.mybatis.spring.SqlSessionUtils.closeSqlSession(SqlSessionUtils.java:193): Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1e34c607]  
[DEBUG] 2017-08-30 14:07:46,570(5590) --&gt; [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:327): Returning JDBC Connection to DataSource  
[DEBUG] 2017-08-30 14:07:46,578(5598) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [systemProperties] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:46,580(5600) --&gt; [main] org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:109): Adding [systemEnvironment] PropertySource with lowest search precedence  
[DEBUG] 2017-08-30 14:07:46,581(5601) --&gt; [main] org.springframework.core.env.AbstractEnvironment.&lt;init&gt;(AbstractEnvironment.java:126): Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]  
[INFO ] 2017-08-30 14:07:46,581(5601) --&gt; [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317): Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]  
[DEBUG] 2017-08-30 14:07:46,582(5602) --&gt; [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:73): Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]  
[DEBUG] 2017-08-30 14:07:46,584(5604) --&gt; [main] org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(BeansDtdResolver.java:74): Found beans DTD [http://www.springframework.org/dtd/spring-beans-2.0.dtd] in classpath: spring-beans-2.0.dtd  
[DEBUG] 2017-08-30 14:07:46,606(5626) --&gt; [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:92): Loading bean definitions  
[DEBUG] 2017-08-30 14:07:46,631(5651) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;DB2&apos;  
[DEBUG] 2017-08-30 14:07:46,631(5651) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;DB2&apos;  
[DEBUG] 2017-08-30 14:07:46,632(5652) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;DB2&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,644(5664) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;DB2&apos;  
[DEBUG] 2017-08-30 14:07:46,644(5664) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;Derby&apos;  
[DEBUG] 2017-08-30 14:07:46,644(5664) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;Derby&apos;  
[DEBUG] 2017-08-30 14:07:46,645(5665) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;Derby&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,649(5669) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;Derby&apos;  
[DEBUG] 2017-08-30 14:07:46,649(5669) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;H2&apos;  
[DEBUG] 2017-08-30 14:07:46,650(5670) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;H2&apos;  
[DEBUG] 2017-08-30 14:07:46,652(5672) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;H2&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,653(5673) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;H2&apos;  
[DEBUG] 2017-08-30 14:07:46,654(5674) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;HSQL&apos;  
[DEBUG] 2017-08-30 14:07:46,654(5674) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;HSQL&apos;  
[DEBUG] 2017-08-30 14:07:46,656(5676) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;HSQL&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,656(5676) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;HSQL&apos;  
[DEBUG] 2017-08-30 14:07:46,657(5677) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;Informix&apos;  
[DEBUG] 2017-08-30 14:07:46,658(5678) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;Informix&apos;  
[DEBUG] 2017-08-30 14:07:46,658(5678) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;Informix&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,659(5679) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;Informix&apos;  
[DEBUG] 2017-08-30 14:07:46,660(5680) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;MS-SQL&apos;  
[DEBUG] 2017-08-30 14:07:46,660(5680) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;MS-SQL&apos;  
[DEBUG] 2017-08-30 14:07:46,660(5680) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;MS-SQL&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,661(5681) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;MS-SQL&apos;  
[DEBUG] 2017-08-30 14:07:46,661(5681) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;MySQL&apos;  
[DEBUG] 2017-08-30 14:07:46,661(5681) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;MySQL&apos;  
[DEBUG] 2017-08-30 14:07:46,661(5681) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;MySQL&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,665(5685) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;MySQL&apos;  
[DEBUG] 2017-08-30 14:07:46,665(5685) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;Oracle&apos;  
[DEBUG] 2017-08-30 14:07:46,665(5685) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;Oracle&apos;  
[DEBUG] 2017-08-30 14:07:46,666(5686) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;Oracle&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,666(5686) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;Oracle&apos;  
[DEBUG] 2017-08-30 14:07:46,666(5686) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;PostgreSQL&apos;  
[DEBUG] 2017-08-30 14:07:46,666(5686) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;PostgreSQL&apos;  
[DEBUG] 2017-08-30 14:07:46,666(5686) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;PostgreSQL&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,670(5690) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;PostgreSQL&apos;  
[DEBUG] 2017-08-30 14:07:46,672(5692) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;Sybase&apos;  
[DEBUG] 2017-08-30 14:07:46,672(5692) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;Sybase&apos;  
[DEBUG] 2017-08-30 14:07:46,672(5692) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;Sybase&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,673(5693) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;Sybase&apos;  
[DEBUG] 2017-08-30 14:07:46,674(5694) --&gt; [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221): Creating shared instance of singleton bean &apos;Hana&apos;  
[DEBUG] 2017-08-30 14:07:46,674(5694) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:448): Creating instance of bean &apos;Hana&apos;  
[DEBUG] 2017-08-30 14:07:46,674(5694) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:529): Eagerly caching bean &apos;Hana&apos; to allow for resolving potential circular references  
[DEBUG] 2017-08-30 14:07:46,677(5697) --&gt; [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:484): Finished creating instance of bean &apos;Hana&apos;  
[INFO ] 2017-08-30 14:07:46,680(5700) --&gt; [main] org.springframework.jdbc.support.SQLErrorCodesFactory.&lt;init&gt;(SQLErrorCodesFactory.java:126): SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]  
[DEBUG] 2017-08-30 14:07:46,681(5701) --&gt; [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:199): Looking up default SQLErrorCodes for DataSource [com.flat.srm.common.datasource.DynamicDataSource@6759f091]  
[DEBUG] 2017-08-30 14:07:46,684(5704) --&gt; [main] org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:110): Fetching JDBC Connection from DataSource  
[DEBUG] 2017-08-30 14:07:46,685(5705) --&gt; [main] org.springframework.jdbc.datasource.DataSourceUtils.doReleaseConnection(DataSourceUtils.java:327): Returning JDBC Connection to DataSource  
[DEBUG] 2017-08-30 14:07:46,685(5705) --&gt; [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:217): Database product name cached for DataSource [com.flat.srm.common.datasource.DynamicDataSource@6759f091]: name is &apos;MySQL&apos;  
[DEBUG] 2017-08-30 14:07:46,688(5708) --&gt; [main] org.springframework.jdbc.support.SQLErrorCodesFactory.getErrorCodes(SQLErrorCodesFactory.java:175): SQL error codes for &apos;MySQL&apos; found  
[DEBUG] 2017-08-30 14:07:46,689(5709) --&gt; [main] org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.logTranslation(SQLErrorCodeSQLExceptionTranslator.java:397): Translating SQLException with SQL state &apos;23000&apos;, error code &apos;1062&apos;, message [Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;]; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
### The error may involve com.flat.srm.system.dao.user.IUserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into     cp_user      ( NAME,                MAIL,                PID )      values     ( &apos;text1&apos;,                &apos;70&apos;,                ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
]  
[DEBUG] 2017-08-30 14:07:46,690(5710) --&gt; [main] org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener.beforeOrAfterTestMethod(AbstractDirtiesContextTestExecutionListener.java:106): After test method: context [DefaultTestContext@148080bb testClass = UserTest, testInstance = com.flat.srm.system.UserTest@66480dd7, testMethod = saveUser@UserTest, testException = org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
### The error may involve com.flat.srm.system.dao.user.IUserMapper.save-Inline
### The error occurred while setting parameters
### SQL: insert into     cp_user      ( NAME,                MAIL,                PID )      values     ( &apos;text1&apos;,                &apos;70&apos;,                ? )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;
; SQL []; Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry &apos;70&apos; for key &apos;cp_user_mail_index&apos;, mergedContextConfiguration = [MergedContextConfiguration@dc24521 testClass = UserTest, locations = &apos;{classpath:spring/applicationContext.xml, classpath:spring/applicationContext-shiro.xml}&apos;, classes = &apos;{}&apos;, contextInitializerClasses = &apos;[]&apos;, activeProfiles = &apos;{}&apos;, propertySourceLocations = &apos;{}&apos;, propertySourceProperties = &apos;{}&apos;, contextLoader = &apos;org.springframework.test.context.support.DelegatingSmartContextLoader&apos;, parent = [null]]], class annotated with @DirtiesContext [false] with mode [null], method annotated with @DirtiesContext [false] with mode [null].  
</system-err>
  </testcase>
  <testcase classname="com.flat.srm.system.UserTest" name="findUser" time="0.029"/>
  <testcase classname="com.flat.srm.system.UserTest" name="userRole" time="0.012"/>
  <testcase classname="com.flat.srm.system.UserTest" name="findUsersTest" time="0.015"/>
</testsuite>